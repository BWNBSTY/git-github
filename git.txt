************************************ git and github ********************************
what is git?
free and open source version control system.
                     (tools that help to tracks changes in code)
what is github?
website where we host repositories online.

README.md : md ka fullform markdown.
            jo vi repo hum banayega uska details dene ke leyeh.
            It is optional.
            good practice is to initialize it.

commit : ka matlab changes.

* using git : * command line(most popular)
              * IDE/code editors (like vs code)
              * graphical user interface (like gitkraken)

git --version : check version.
git : to see various commands.

* configuring git
iska matlab basic chizeh pehele hi setup kar dena.
git config --global user.name "My Name"
git config --global user.email "someone@email.com"
git config --list

* git using vs code
use terminal


* clone command :
clone : cloning a repository on our local machine.
        git clone <-go to code option in repo and copy and paste here->

* status command
status : displays the state of the code.
         git status
untrack files : naya files jo hum ne banaya.


* add and commit commands : 
add : adds new or changed files in your working directory to the git staging area.
      git add <-file name->
      git add . : likne seh sab file add/staged ho jayega.

commit : it is the record of change.
         git commit -m "some message"

* push command
push : upload local repo content to remote repo
       git push origin main


* init command
init : used to create a new git repo.
       using init we can make local system folders to repo in github/push to github.
       git init
       git remote add origin <-create new repo in github and copy & paste https here->
       git remote -v (to verify remote)
       git branch (to check branch)
       git branch -M main (to rename branch)
       git push origin main

git push -u origin main : if we write it once then we can just write git push to push .
git commit -am "message" : ek sath add and commit karneh keh liyeh.


* workflow
github : code changes.
         commit.

local git : code changes.
            add (stage achange).
            commit (commit changes).
            push.

* git branches : 

* branch commands : git branch (to check branch)
                    git branch -M (to rename branch)
                    git checkout <-branch name-> (to navigate)
                    git checkout -b <-new branch name-> (to create new branch)
                    git branch -d <-branch name-> (to delete branch)
jis branch meh hain hum usko delete nhi kar sakthe pehele checkout karna parega.

* merging branches : 
merging code : git diff <-branch name-> (to compare commits,branches,files & more)
               git merge <-branch name-> (to merge 2 branches)
                            or
               create a PR (pull request).

pull request : It lets you tell others about changes you've pushed to a branch in a repository on github.

* pull command : git pull origin main
                 (used to fetch and download content from a remote repo and immediately update the local repo to match that content)

push : local seh github
pull : github seh local.


* merge conflicts : An event that takes place when git is unable to automatically resolve differences in code between two commits.
eg : agar two branch ho aur same line meh alag alag lika ho toh.


* fixing mistakes : case 1: staged changes 
                            git reset <-file name-> (galti seh add kar diya toh recent add ko hata deta hain)
                            git reset
                    case 2: commited changes (for one commit)
                            git reset HEAD~1
                    case 3: commited changes (for many commits)
                            git reset <-commit hash->
                            git reset --hard <-commit hash->  (uske badh wala commit vi hath jayega)

git log : sareh ke sareh commit dikh jayega.
press q to quit.
hash code git log karneh seh dikh jayega.


* forking : A fork is a new repository that shares code and visibility settings with the original "upstream" repository.
            fork is a rough copy.

